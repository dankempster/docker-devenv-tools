#!/usr/bin/env bash

alpine=""
entryPoint=""
wantedVersion="latest"
volumeVersion="_7"

volumeComposer="composer${volumeVersion}"
volumeComposerCache="composer${volumeVersion}_cache"

#set -x

display_help () {
#    set +x

    echo "Composer Docker Wrapper"
    echo ""
    echo "USAGE: composer [PHP-VERSION] [-c|--cmd VALUE] [-ahnv] [--] COMPOSER-ARGS"
    echo ""
    echo "    -a | --alpine    : Use an Alpine based image."
    echo "    -c | --cmd       : Alternative bash command to run instead of composer"
    echo "                       Useful for testing and debugging."
    echo "    -h | --help      : Display this help."
    echo "    -n | --no-alpine : Use ubuntu based image (Default)."
    echo "    -v | --verbose   : Be verbose."
    echo ""
    echo ""
    echo "Composer Commands:"
    docker run --rm -u www-data:www-data -v $(pwd):/project -v ${volumeComposer}:/composer -v ${volumeComposerCache}:/composer-cache -w /project dankempster/composer:${wantedVersion} list

    return 0
}

while :
do
    if [[ "$1" =~ ^[0-9.]+ ]]; then
        wantedVersion="$1";
        shift 1
    else
        case "$1" in
            -a | --alpine)
	            alpine="-alpine"
	            shift 1
	        ;;
            -c | --cmd)
	            entryPoint=$2
	            shift 2;
	        ;;
            -h | --help)
	            display_help
	            # no shifting needed here, we're done.
	            exit 0
	        ;;
            -n | --no-alpine)
	            alpine=""
	            shift 1
	        ;;
            -v | --verbose)
                #  It's better to assign a string, than a number like "verbose=1"
                #  because if you're debugging the script with "bash -x" code like this:
                #
                #    if [ "$verbose" ] ...
                #
                #  You will see:
                #
                #    if [ "verbose" ] ...
                #
                  #  Instead of cryptic
                #
                #    if [ "1" ] ...
                #
                verbose="verbose"
                shift
            ;;
            --) # End of all options
	            shift
	            break;
	        ;;
            -*) # Start or Composer's arguments
	            break;
	        ;;
            *)  # No more options
	            break
	        ;;
        esac
    fi
done

if [[ "$wantedVersion" =~ ^5 ]]; then
    volumeVersion=""
fi

tag="${wantedVersion}${alpine}"
volumeComposer="composer${volumeVersion}"
volumeComposerCache="composer${volumeVersion}_cache"

if [ "$tag" = "latest-alpine" ]; then
    tag="alpine"
fi

if [ "$verbose" ]; then
    echo "PHP: ${wantedVersion}"
    if [ "$alpine" ]; then
        echo "Alpine: Yes";
    else
        echo "Alpine: No";
    fi
    echo "Tag: ${tag}"
    if [ "$entryPoint" ]; then
        echo "Entry Point: $entryPoint"
    fi
    echo "Volumes:"
    echo "  $volumeComposer"
    echo "  $volumeComposerCache"
fi

if [ "$entryPoint" = "" ]; then
    docker run --rm -u www-data:www-data -v $(pwd):/project -v ${volumeComposer}:/composer -v ${volumeComposerCache}:/composer-cache -w /project dankempster/composer:${tag} "$@"
else
    docker run --rm --entrypoint="$entryPoint" -i -v $(pwd):/project -v ${volumeComposer}:/composer -v ${volumeComposerCache}:/composer-cache -w /project dankempster/composer:${tag} "$@"
fi

